// Mocks generated by Mockito 5.3.2 from annotations
// in tvserials/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i16;
import 'dart:typed_data' as _i17;

import 'package:core/data/datasources/db/database_helper_tv_serial.dart'
    as _i14;
import 'package:core/data/datasources/tv/tv_local_data_source.dart' as _i12;
import 'package:core/data/datasources/tv/tv_remote_data_source.dart' as _i10;
import 'package:core/data/models/tv/tv_detail_model.dart' as _i3;
import 'package:core/data/models/tv/tv_model.dart' as _i11;
import 'package:core/data/models/tv/tv_table.dart' as _i13;
import 'package:core/utils/failure.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i15;
import 'package:tvserials/domain/entities/tv/tv.dart' as _i8;
import 'package:tvserials/domain/entities/tv/tv_detail.dart' as _i9;
import 'package:tvserials/domain/repositories/tv_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSerialDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvSerialDetailResponse {
  _FakeTvSerialDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvSerialRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSerialRepository extends _i1.Mock
    implements _i5.TvSerialRepository {
  MockTvSerialRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>
      getNowPlayingTvSerials() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingTvSerials,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
              this,
              Invocation.method(
                #getNowPlayingTvSerials,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>
      getPopularTvSerials() => (super.noSuchMethod(
            Invocation.method(
              #getPopularTvSerials,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
              this,
              Invocation.method(
                #getPopularTvSerials,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>
      getTopRatedTvSerials() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedTvSerials,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
              this,
              Invocation.method(
                #getTopRatedTvSerials,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TvSerialDetail>> getTvSerialDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSerialDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i9.TvSerialDetail>>.value(
                _FakeEither_0<_i7.Failure, _i9.TvSerialDetail>(
          this,
          Invocation.method(
            #getTvSerialDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.TvSerialDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>
      getTvSerialRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getTvSerialRecommendations,
              [id],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
              this,
              Invocation.method(
                #getTvSerialRecommendations,
                [id],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>> searchTvSerials(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSerials,
          [query],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
          this,
          Invocation.method(
            #searchTvSerials,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlistTvSerial(
          _i9.TvSerialDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistTvSerial,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistTvSerial,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlistTvSerial(
          _i9.TvSerialDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTvSerial,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistTvSerial,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlistTvSerial(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlistTvSerial,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>
      getWatchlistTvSerials() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistTvSerials,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.TvSerial>>(
              this,
              Invocation.method(
                #getWatchlistTvSerials,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvSerial>>>);
}

/// A class which mocks [TvSerialRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSerialRemoteDataSource extends _i1.Mock
    implements _i10.TvSerialRemoteDataSource {
  MockTvSerialRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i11.TvSerialModel>> getNowPlayingTvSerials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTvSerials,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.TvSerialModel>>.value(<_i11.TvSerialModel>[]),
      ) as _i6.Future<List<_i11.TvSerialModel>>);
  @override
  _i6.Future<List<_i11.TvSerialModel>> getPopularTvSerials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSerials,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.TvSerialModel>>.value(<_i11.TvSerialModel>[]),
      ) as _i6.Future<List<_i11.TvSerialModel>>);
  @override
  _i6.Future<List<_i11.TvSerialModel>> getTopRatedTvSerials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSerials,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.TvSerialModel>>.value(<_i11.TvSerialModel>[]),
      ) as _i6.Future<List<_i11.TvSerialModel>>);
  @override
  _i6.Future<_i3.TvSerialDetailResponse> getTvSerialDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSerialDetail,
          [id],
        ),
        returnValue: _i6.Future<_i3.TvSerialDetailResponse>.value(
            _FakeTvSerialDetailResponse_1(
          this,
          Invocation.method(
            #getTvSerialDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.TvSerialDetailResponse>);
  @override
  _i6.Future<List<_i11.TvSerialModel>> getTvSerialRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSerialRecommendations,
          [id],
        ),
        returnValue:
            _i6.Future<List<_i11.TvSerialModel>>.value(<_i11.TvSerialModel>[]),
      ) as _i6.Future<List<_i11.TvSerialModel>>);
  @override
  _i6.Future<List<_i11.TvSerialModel>> searchTvSerials(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSerials,
          [query],
        ),
        returnValue:
            _i6.Future<List<_i11.TvSerialModel>>.value(<_i11.TvSerialModel>[]),
      ) as _i6.Future<List<_i11.TvSerialModel>>);
}

/// A class which mocks [TvSerialLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSerialLocalDataSource extends _i1.Mock
    implements _i12.TvSerialLocalDataSource {
  MockTvSerialLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlistTvSerial(_i13.TvSerialTable? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTvSerial,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlistTvSerial(_i13.TvSerialTable? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTvSerial,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i13.TvSerialTable?> getTvSerialById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSerialById,
          [id],
        ),
        returnValue: _i6.Future<_i13.TvSerialTable?>.value(),
      ) as _i6.Future<_i13.TvSerialTable?>);
  @override
  _i6.Future<List<_i13.TvSerialTable>> getWatchlistTvSerials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvSerials,
          [],
        ),
        returnValue:
            _i6.Future<List<_i13.TvSerialTable>>.value(<_i13.TvSerialTable>[]),
      ) as _i6.Future<List<_i13.TvSerialTable>>);
}

/// A class which mocks [DatabaseHelperTvSerial].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperTvSerial extends _i1.Mock
    implements _i14.DatabaseHelperTvSerial {
  MockDatabaseHelperTvSerial() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i15.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i6.Future<_i15.Database?>.value(),
      ) as _i6.Future<_i15.Database?>);
  @override
  _i6.Future<int> insertWatchlistTvSerial(_i13.TvSerialTable? tvSerial) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTvSerial,
          [tvSerial],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlistTvSerial(_i13.TvSerialTable? tvSerial) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTvSerial,
          [tvSerial],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getTvSerialById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSerialById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTvSerials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvSerials,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i17.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i17.Uint8List>.value(_i17.Uint8List(0)),
      ) as _i6.Future<_i17.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
